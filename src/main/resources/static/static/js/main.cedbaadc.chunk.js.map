{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJwtToHeader.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectName","projectIdentifier","description","className","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","get","res","setJwtToHeader","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","headerLinks","data-toggle","data-target","AddProject","state","start_date","end_date","errors","onChange","onSubmit","e","setState","target","name","value","preventDefault","newProject","invalidProjectName","invalidProjectIdentifier","invalidDescription","classnames","placeholder","initialState","project_tasks","project_task","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","nextProps","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","baseApi","Backlog","tasks","todoItems","inProgressItems","doneItems","index","length","task","status","ProjectBoard","getBacklog","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newProjectTask","addProjectTask","invalidSummary","UpdateProjectTask","create_At","getProjectTask","projectTask","UpdatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","event","newUser","createNewUser","invalidUsername","invalidPassword","invalidFullName","invalidConfirmPassword","Login","LoginRequest","login","setItem","decoded","jwtDecode","component","otherProps","render","jwtToken","getItem","decodedToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cedbaadc.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\r\n\r\nconst baseApi = '/api';\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`${baseApi}/project`, project);\r\n    history.push(`/dashboard`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(`${baseApi}/project/all`);\r\n  dispatch ({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`${baseApi}/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push('/dashboard');\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm('Are you sure? This will delete the projet and all the data related to it')) {\r\n    await axios.delete(`${baseApi}/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n\r\n","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProject } from '../../actions/projectActions';\r\n\r\nclass ProjectItem extends Component {\r\n\r\n  onDeleteClick = id => {\r\n      this.props.deleteProject(id);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        projectName,\r\n        projectIdentifier,\r\n        description\r\n    } = this.props.project;\r\n    return (\r\n      <div className=\"container\">\r\n          <div className=\"card card-body bg-light mb-3\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-2\">\r\n                      <span className=\"mx-auto\">{projectIdentifier}</span>\r\n                  </div>\r\n                  <div className=\"col-lg-6 col-md-4 col-8\">\r\n                      <h3>{projectName}</h3>\r\n                      <p>{description}</p>\r\n                  </div>\r\n                  <div className=\"col-md-4 d-none d-lg-block\">\r\n                      <ul className=\"list-group\">\r\n                          <Link to={`/projectBoard/${projectIdentifier}`}>\r\n                              <li className=\"list-group-item board\">\r\n                                  <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                              </li>\r\n                          </Link>\r\n                          <Link to={`updateProject/${projectIdentifier}`}>\r\n                              <li className=\"list-group-item update\">\r\n                                  <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                              </li>\r\n                          </Link>\r\n                          <li\r\n                            onClick={this.onDeleteClick.bind(this, projectIdentifier)}\r\n                            className=\"list-group-item delete\">\r\n                              <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                          </li>\r\n                      </ul>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = ()  => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n          Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from 'react-redux';\r\nimport { getProjects } from '../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h1 className=\"display-4 text-center\">Projects</h1>\r\n                    <br />\r\n                    <CreateProjectButton />\r\n                    <br />\r\n                    <hr />\r\n                    {\r\n                      projects.map(project => (\r\n                        <ProjectItem\r\n                          key={project.id}\r\n                          project={project} />\r\n                      ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ project }) => ({\r\n  project\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProjects})(Dashboard);\r\n","import axios from 'axios';\r\n\r\nconst setJwtToHeader = token => {\r\n  if (token) {\r\n    return axios.defaults.headers.common['Authorization'] = token;\r\n  }\r\n  delete axios.defaults.headers.common['Authorization'];\r\n}\r\n\r\nexport default setJwtToHeader;\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport jwtDecode from 'jwt-decode';\r\nimport setJwtToHeader from '../securityUtils/setJwtToHeader';\r\n\r\nconst baseApi = '/api/users';\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`${baseApi}/register`, newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`${baseApi}/login`, LoginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem('jwtToken', token);\r\n    setJwtToHeader(token);\r\n    const decoded = jwtDecode(token);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem('jwtToken');\r\n  setJwtToHeader(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/securityActions';\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = '/';\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/dashboard\">\r\n                      Dashboard\r\n                  </Link>\r\n              </li>\r\n          </ul>\r\n\r\n          <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                  <Link className=\"nav-link \" to=\"/register\">\r\n                    <i className=\"fas fa-user-circle mr-1\" />\r\n                    { user.fullName }\r\n                  </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                  <Link\r\n                    className=\"nav-link\"\r\n                    to=\"/logout\"\r\n                    onClick={ this.logout.bind(this) }>\r\n                      Logout\r\n                  </Link>\r\n              </li>\r\n          </ul>\r\n      </div>\r\n    );\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                  <Link className=\"nav-link \" to=\"/register\">\r\n                    Signup\r\n                  </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                  <Link\r\n                    className=\"nav-link\"\r\n                    to=\"/login\">\r\n                      Login\r\n                  </Link>\r\n              </li>\r\n          </ul>\r\n      </div>\r\n    );\r\n\r\n    const headerLinks = (validToken && user) ? userIsAuthenticated : userIsNotAuthenticated;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to=\"dashboard\">\r\n                Personal Project Management Tool\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            { headerLinks }\r\n        </div>\r\n    </nav>\r\n    )\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ security }) => ({\r\n  security\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { createProject } from '../../actions/projectActions';\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    const { errors } = props;\r\n    if (errors) {\r\n      this.setState({\r\n        errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const { projectName, projectIdentifier, description, start_date, end_date } = this.state;\r\n    const newProject = {\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n      errors : {\r\n        projectName: invalidProjectName,\r\n        projectIdentifier: invalidProjectIdentifier,\r\n        description: invalidDescription\r\n      }\r\n    } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidProjectName\r\n                              })}\r\n                              placeholder=\"Project Name\"\r\n                              name=\"projectName\"\r\n                              value={projectName}\r\n                              onChange={this.onChange} />\r\n                              {\r\n                                invalidProjectName && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidProjectName }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidProjectIdentifier\r\n                              })}\r\n                              placeholder=\"Unique Project ID\"\r\n                              name=\"projectIdentifier\"\r\n                              value={projectIdentifier}\r\n                              onChange={this.onChange} />\r\n                            {\r\n                              invalidProjectIdentifier && (\r\n                                <div className=\"invalid-feedback\">\r\n                                  { invalidProjectIdentifier }\r\n                                </div>\r\n                              )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidDescription\r\n                              })}\r\n                              placeholder=\"Project Description\"\r\n                              name=\"description\"\r\n                              value={description}\r\n                              onChange={this.onChange}\r\n                            ></textarea>\r\n                            {\r\n                              invalidDescription && (\r\n                                <div className=\"invalid-feedback\">\r\n                                  { invalidDescription }\r\n                                </div>\r\n                              )\r\n                            }\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"date\"\r\n                              className=\"form-control form-control-lg\"\r\n                              name=\"start_date\"\r\n                              value={start_date}\r\n                              onChange={this.onChange} />\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"date\"\r\n                              className=\"form-control form-control-lg\"\r\n                              name=\"end_date\"\r\n                              value={end_date}\r\n                              onChange={this.onChange} />\r\n                        </div>\r\n\r\n                        <input\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ errors }) => ({\r\n  errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch(action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const {\r\n    type,\r\n    payload\r\n  } = action;\r\n  switch(type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: payload\r\n      };\r\n    case DELETE_PROJECT:\r\n        return {\r\n          ...state,\r\n          projects: state.projects.filter(project => project.projectIdentifier !== payload)\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from '../actions/types';\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const {\r\n    payload,\r\n    type\r\n  } = action;\r\n\r\n  switch(type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(project => project.projectSequence !== payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nexport default function(state = initialState, { type, payload }) {\r\n  switch(type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: !!payload,\r\n        user: payload\r\n      };\r\n    default:\r\n     return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes('Chrome') && ReactReduxDevTools) {\r\n  store = createStore(\r\n                      rootReducer,\r\n                      initialState,\r\n                      compose(\r\n                        applyMiddleware(...middleware),\r\n                        ReactReduxDevTools\r\n                        ),\r\n                     );\r\n} else {\r\n  store = createStore(\r\n                      rootReducer,\r\n                      initialState,\r\n                      compose(applyMiddleware(...middleware))\r\n                     );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { getProject, createProject } from '../../actions/projectActions';\r\n\r\nclass UpdateProject extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      errors,\r\n      project\r\n    } = nextProps;\r\n    if (errors) {\r\n      this.setState({\r\n        errors\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      ...project\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match: { params: { id } }, history } = this.props;\r\n    this.props.getProject(id, history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = this.state;\r\n    const updateProject = {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n      errors : {\r\n        projectName: invalidProjectName,\r\n        description: invalidDescription\r\n      }\r\n    } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidProjectName\r\n                              })}\r\n                              placeholder=\"Project Name\"\r\n                              name=\"projectName\"\r\n                              value={projectName}\r\n                              onChange={this.onChange} />\r\n                              {\r\n                                invalidProjectName && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidProjectName }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Unique Project ID\"\r\n                              name=\"projectIdentifier\"\r\n                              value={projectIdentifier}\r\n                              disabled />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidDescription\r\n                              })}\r\n                              placeholder=\"Project Description\"\r\n                              name=\"description\"\r\n                              value={description}\r\n                              onChange={this.onChange}\r\n                            ></textarea>\r\n                            {\r\n                              invalidDescription && (\r\n                                <div className=\"invalid-feedback\">\r\n                                  { invalidDescription }\r\n                                </div>\r\n                              )\r\n                            }\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"date\"\r\n                              className=\"form-control form-control-lg\"\r\n                              name=\"start_date\"\r\n                              value={start_date}\r\n                              onChange={this.onChange} />\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"date\"\r\n                              className=\"form-control form-control-lg\"\r\n                              name=\"end_date\"\r\n                              value={end_date}\r\n                              onChange={this.onChange} />\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ project: { project }, errors}) => ({\r\n  project: project,\r\n  errors: errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(UpdateProject);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProjectTask extends Component {\r\n\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { projectSequence, priority, summary, acceptanceCriteria, projectIdentifier } = this.props.project_task;\r\n    let priorityString;\r\n    let priorityClass;\r\n    switch(priority) {\r\n      case 2:\r\n         priorityClass = 'bg-warning text-light';\r\n         priorityString = 'MEDIUM';\r\n        break;\r\n      case 3:\r\n        priorityClass = 'bg-info text-light';\r\n        priorityString = 'LOW';\r\n        break;\r\n      default:\r\n        priorityClass = 'bg-danger text-light';\r\n        priorityString = 'HIGH';\r\n        break;\r\n    }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n          <div className={`card-header text-primary ${ priorityClass }`}>\r\n              ID: { projectSequence } -- Priority: { priorityString }\r\n          </div>\r\n          <div className=\"card-body bg-light\">\r\n              <h5 className=\"card-title\">{ summary }</h5>\r\n              <p className=\"card-text text-truncate \">\r\n                  { acceptanceCriteria }\r\n              </p>\r\n              <Link to={`/updateProjectTask/${projectIdentifier}/${projectSequence}`} className=\"btn btn-primary\">\r\n                  View / Update\r\n              </Link>\r\n\r\n              <button \r\n                className=\"btn btn-danger ml-4\"\r\n                onClick={ this.onDeleteClick.bind(\r\n                  this,\r\n                  projectIdentifier,\r\n                  projectSequence\r\n                ) }>\r\n                  Delete\r\n              </button>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, GET_PROJECT_TASK, DELETE_PROJECT_TASK, GET_BACKLOG } from './types';\r\n\r\nconst baseApi = '/api';\r\nconst backlogApi = baseApi + '/backlog';\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`${backlogApi}/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`${backlogApi}/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`${backlogApi}/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push('/dashboard');\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n  try {\r\n    await axios.patch(`${backlogApi}/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (window.confirm(`You are deleting project task ${pt_id}. This action can not be undone.`)) {\r\n    await axios.delete(`${backlogApi}/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n\r\n","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks } = this.props;\r\n    const tasks = project_tasks.map(project_task => (\r\n        <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let index = 0; index < tasks.length; index++) {\r\n      const task = tasks[index];\r\n      const status = task.props.project_task.status;\r\n\r\n      switch(status) {\r\n        case 'IN_PROGRESS':\r\n          inProgressItems.push(task);\r\n          break;\r\n        case 'DONE':\r\n          doneItems.push(task);\r\n          break;\r\n        default: // TO_DO\r\n          todoItems.push(task);\r\n          break;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                    <div className=\"card-header bg-secondary text-white\">\r\n                        <h3>TO DO</h3>\r\n                    </div>\r\n                </div>\r\n                { todoItems }\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                    <div className=\"card-header bg-primary text-white\">\r\n                        <h3>In Progress</h3>\r\n                    </div>\r\n                </div>\r\n                { inProgressItems }\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                    <div className=\"card-header bg-success text-white\">\r\n                        <h3>Done</h3>\r\n                    </div>\r\n                </div>\r\n                { doneItems }\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getBacklog } from '../../actions/backlogActions';\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps({errors}) {\r\n    if (errors) {\r\n      this.setState({\r\n        errors\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id: projectIdentifier } = this.props.match.params;\r\n    this.props.getBacklog(projectIdentifier);\r\n  }\r\n\r\n  render() {\r\n    const { id: projectIdentifier } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.props;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className='alert alert-danger text-center' role='alert'>\r\n              { errors.projectNotFound }\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className='alert alert-info text-center' role='alert'>\r\n              No tasks found here\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return (\r\n          <Backlog project_tasks={project_tasks} />\r\n        );\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"container\">\r\n          <Link to={`/addProjectTask/${projectIdentifier}`} className=\"btn btn-primary mb-3\">\r\n              <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n          </Link>\r\n          <br />\r\n          <hr />\r\n          { boardAlgorithm(errors, project_tasks) }\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ backlog, errors }) => ({\r\n  backlog,\r\n  errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getBacklog\r\n})(ProjectBoard);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      const { id: projectIdentifier } = this.props.match.params;\r\n      this.state = {\r\n          summary: \"\",\r\n          acceptanceCriteria: \"\",\r\n          status: \"\",\r\n          priority: 0,\r\n          dueDate: \"\",\r\n          projectIdentifier,\r\n          errors: {}\r\n      };\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps({errors}) {\r\n    if (errors) {\r\n      this.setState({\r\n        errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const {\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier\r\n    } = this.state;\r\n    const newProjectTask = {\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier\r\n    };\r\n    this.props.addProjectTask(projectIdentifier, newProjectTask, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        summary,\r\n        acceptanceCriteria,\r\n        status,\r\n        priority,\r\n        dueDate,\r\n        projectIdentifier,\r\n        errors : {\r\n          summary: invalidSummary,\r\n        }\r\n    } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${projectIdentifier}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                  \"is-invalid\": invalidSummary\r\n                                })}\r\n                                name=\"summary\"\r\n                                placeholder=\"Project Task summary\"\r\n                                value={summary}\r\n                                onChange={this.onChange} />\r\n                              {\r\n                                invalidSummary && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidSummary }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Acceptance Criteria\"\r\n                              name=\"acceptanceCriteria\"\r\n                              value={acceptanceCriteria}\r\n                              onChange={this.onChange}\r\n                            ></textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"date\"\r\n                              className=\"form-control form-control-lg\"\r\n                              name=\"dueDate\"\r\n                              value={dueDate}\r\n                              onChange={this.onChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select\r\n                              className=\"form-control form-control-lg\"\r\n                              name=\"priority\"\r\n                              value={priority}\r\n                              onChange={this.onChange} >\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select\r\n                              className=\"form-control form-control-lg\"\r\n                              name=\"status\"\r\n                              value={status}\r\n                              onChange={this.onChange} >\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({errors}) => ({\r\n  errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { getProjectTask, updateProjectTask } from '../../../actions/backlogActions';\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tid: '',\r\n\t\t\tprojectSequence: '',\r\n\t\t\tsummary: '',\r\n\t\t\tacceptanceCriteria: '',\r\n\t\t\tstatus: '',\r\n\t\t\tpriority: '',\r\n\t\t\tdueDate: '',\r\n\t\t\tprojectIdentifier: '',\r\n\t\t\tcreate_At: '',\r\n\t\t\terrors: {}\r\n\t\t};\r\n\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { backlog_id, pt_id } = this.props.match.params;\r\n\t\tthis.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tconst {\r\n\t\t\tprojectTask: {\r\n\t\t\tid,\r\n\t\t\tprojectSequence,\r\n\t\t\tsummary,\r\n\t\t\tacceptanceCriteria,\r\n\t\t\tstatus,\r\n\t\t\tpriority,\r\n\t\t\tdueDate,\r\n\t\t\tprojectIdentifier,\r\n\t\t\tcreate_At\r\n\t\t\t},\r\n\t\t\terrors\r\n\t\t} = nextProps;\r\n\r\n\t\tthis.setState({\r\n\t\t\tid,\r\n\t\t\tprojectSequence,\r\n\t\t\tsummary,\r\n\t\t\tacceptanceCriteria,\r\n\t\t\tstatus,\r\n\t\t\tpriority,\r\n\t\t\tdueDate,\r\n\t\t\tprojectIdentifier,\r\n\t\t\tcreate_At,\r\n\t\t\terrors\r\n\t\t});\r\n\t}\r\n\r\n\tonChange(e) {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tconst {\r\n\t\t\tid,\r\n\t\t\tprojectSequence,\r\n\t\t\tsummary,\r\n\t\t\tacceptanceCriteria,\r\n\t\t\tstatus,\r\n\t\t\tpriority,\r\n\t\t\tdueDate,\r\n\t\t\tprojectIdentifier,\r\n\t\t\tcreate_At\r\n\t\t} = this.state;\r\n\t\tconst UpdatedProjectTask = {\r\n\t\t\tid,\r\n\t\t\tprojectSequence,\r\n\t\t\tsummary,\r\n\t\t\tacceptanceCriteria,\r\n\t\t\tstatus,\r\n\t\t\tpriority,\r\n\t\t\tdueDate,\r\n\t\t\tprojectIdentifier,\r\n\t\t\tcreate_At\r\n\t\t};\r\n\t\tconst { updateProjectTask, history } = this.props;\r\n\t\tupdateProjectTask(projectIdentifier, projectSequence, UpdatedProjectTask, history);\t\t\r\n\t}\r\n\r\n  render() {\r\n\t\tconst { \r\n\t\t\tprojectIdentifier, \r\n\t\t\tprojectSequence,\r\n\t\t\tsummary,\r\n\t\t\tacceptanceCriteria,\r\n\t\t\tdueDate,\r\n\t\t\tpriority,\r\n\t\t\tstatus,\r\n\t\t\terrors\r\n\t\t}  = this.state;\r\n\t\tlet invalidSummary = null;\r\n\t\tif (errors && errors.summary) {\r\n\t\t\tinvalidSummary = errors.summary;\r\n\t\t} \r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${projectIdentifier}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name: { projectIdentifier } | Project Task ID: { projectSequence }</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classnames(\"form-control form-control-lg\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"is-invalid\": invalidSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"summary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Project Task summary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={summary}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n                                invalidSummary && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidSummary }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control form-control-lg\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Acceptance Criteria\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"acceptanceCriteria\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={acceptanceCriteria}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"date\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control form-control-lg\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"dueDate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={dueDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control form-control-lg\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"priority\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={priority}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} >\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control form-control-lg\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"status\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} >\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n\t\tgetProjectTask: PropTypes.func.isRequired,\r\n\t\tupdateProjectTask: PropTypes.func.isRequired,\r\n    projectTask: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ errors, backlog: { project_task } }) => ({\r\n\t\tprojectTask: project_task,\r\n\t\terrors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends Component {\r\n\r\n  componentDidMount() {\r\n    const { security, history } = this.props;\r\n    return security.validToken && history.push('/dashboard');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                        <p className=\"lead\">\r\n                            Create your account to join active projects or start you own\r\n                        </p>\r\n                        <hr />\r\n                        <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                            Sign Up\r\n                        </Link>\r\n                        <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ security }) => ({ security });\r\n\r\nexport default connect(mapStateToProps, {})(Landing);\r\n","import React, { Component } from 'react';\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      fullName: '',\r\n      confirmPassword: '',\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps({ errors }) {\r\n    if (errors) {\r\n      this.setState({ errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { security, history } = this.props;\r\n    return security.validToken && history.push('/dashboard');\r\n  }\r\n\r\n\r\n  onChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const {\r\n      username,\r\n      password,\r\n      fullName,\r\n      confirmPassword\r\n    } = this.state;\r\n\r\n    const newUser = {\r\n      username,\r\n      fullName,\r\n      password,\r\n      confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      fullName,\r\n      confirmPassword,\r\n      errors: {\r\n        username: invalidUsername,\r\n        password: invalidPassword,\r\n        fullName: invalidFullName,\r\n        confirmPassword: invalidConfirmPassword\r\n      }\r\n    } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                    <p className=\"lead text-center\">Create your Account</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidFullName\r\n                              })}\r\n                              placeholder=\"Full Name\"\r\n                              name=\"fullName\"\r\n                              value={fullName}\r\n                              onChange={this.onChange} />\r\n                              {\r\n                                invalidFullName && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidFullName }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"email\"\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidUsername\r\n                              })}\r\n                              placeholder=\"Email Address\"\r\n                              name=\"username\"\r\n                              value={username}\r\n                              onChange={this.onChange} />\r\n                              {\r\n                                invalidUsername && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidUsername }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"password\"\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidPassword\r\n                              })}\r\n                              placeholder=\"Password\"\r\n                              name=\"password\"\r\n                              value={password}\r\n                              onChange={this.onChange} />\r\n                              {\r\n                                invalidPassword && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidPassword }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"password\"\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidConfirmPassword\r\n                              })}\r\n                              placeholder=\"Confirm Password\"\r\n                              name=\"confirmPassword\"\r\n                              value={confirmPassword}\r\n                              onChange={this.onChange} />\r\n                              {\r\n                                invalidConfirmPassword && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidConfirmPassword }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <input\r\n                          type=\"submit\"\r\n                          className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ errors, security }) => ({\r\n  errors,\r\n  security\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { login } from '../../actions/securityActions'\r\n\r\nclass Login extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps({ errors, security }) {\r\n    errors && this.setState({ errors });\r\n    return security.validToken && this.props.history.push('/dashboard');\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { security, history } = this.props;\r\n    return security.validToken && history.push('/dashboard');\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    const LoginRequest = {\r\n      username,\r\n      password\r\n    };\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      errors: {\r\n        username: invalidUsername,\r\n        password: invalidPassword\r\n      }\r\n    } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">Log In</h1>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"email\"\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidUsername\r\n                              })}\r\n                              placeholder=\"Email Address\"\r\n                              name=\"username\"\r\n                              value={ username }\r\n                              onChange={this.onChange} />\r\n                              {\r\n                                invalidUsername && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidUsername }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                              type=\"password\"\r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": invalidPassword\r\n                              })}\r\n                              placeholder=\"Password\"\r\n                              name=\"password\"\r\n                              value={ password }\r\n                              onChange={this.onChange} />\r\n                              {\r\n                                invalidPassword && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    { invalidPassword }\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ security, errors }) => ({\r\n  security,\r\n  errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    { ...otherProps }\r\n    render={\r\n        props => security.validToken === true ?\r\n          (<Component { ...props } />) :\r\n          (<Redirect to=\"/login\" />)\r\n        }\r\n    />\r\n);\r\n\r\nSecureRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ security }) => ({ security });\r\n\r\nexport default connect(mapStateToProps)(SecureRoute);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from './components/Layout/Header';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from './components/Project/AddProject';\r\nimport { Provider } from 'react-redux';\r\nimport jwtDecode from 'jwt-decode';\r\nimport store from './store';\r\nimport UpdateProject from './components/Project/UpdateProject';\r\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\r\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\r\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\r\nimport Landing from './components/Layout/Landing';\r\nimport Register from './components/UserManagement/Register';\r\nimport Login from './components/UserManagement/Login';\r\nimport setJwtToHeader from './securityUtils/setJwtToHeader';\r\nimport { SET_CURRENT_USER } from './actions/types';\r\nimport { logout } from './actions/securityActions'\r\nimport SecureRoute from './securityUtils/SecureRoute';\r\n\r\nconst jwtToken = localStorage.getItem('jwtToken');\r\nif (jwtToken) {\r\n  setJwtToHeader(jwtToken);\r\n  const decodedToken = jwtDecode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decodedToken\r\n  });\r\n  const currentTime = Date.now() / 1000;\r\n  if (decodedToken.exp < currentTime) {\r\n    store.dispatch(logout())\r\n    window.location.href = '/';\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Route exact path=\"/\" component={ Landing } />\r\n          <Route exact path=\"/register\" component={ Register } />\r\n          <Route exact path=\"/login\" component={ Login } />\r\n          <Switch>\r\n            <SecureRoute exact path=\"/dashboard\" component={ Dashboard } />\r\n            <SecureRoute exact path=\"/addProject\" component={ AddProject } />\r\n            <SecureRoute exact path=\"/updateProject/:id\" component={ UpdateProject } />\r\n            <SecureRoute exact path=\"/projectBoard/:id\" component={ ProjectBoard } />\r\n            <SecureRoute exact path=\"/addProjectTask/:id\" component={ AddProjectTask } />\r\n            <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={ UpdateProjectTask } />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}